name: Laravel CI

on:
  push:
    branches:
      - main
      - development
      - release/**
  pull_request:
    branches:
      - main
      - development
      - release/**
  workflow_dispatch:

env:
  GOOGLE_PROJECT_ID: ${{ vars.GOOGLE_PROJECT_ID }}
  GOOGLE_ARTIFACT_REGISTRY_LOCATION: ${{ vars.GOOGLE_ARTIFACT_REGISTRY_LOCATION }}
  GOOGLE_ARTIFACT_REGISTRY_REPOSITORY: ${{ vars.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}
  GOOGLE_CLOUD_RUN_SERVICE_NAME: ${{ vars.GOOGLE_CLOUD_RUN_SERVICE_NAME }}
  GOOGLE_CLOUD_RUN_REGION: ${{ vars.GOOGLE_CLOUD_RUN_REGION }}

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: laravel
          POSTGRES_USER: laravel
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U laravel"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env example to .env
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate

      - name: Run tests
        run: composer test

  deploy:
    needs: laravel-tests

    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: 'google-github-actions/auth@v2'
        with:
            token_format: access_token
            project_id: '${{ vars.GOOGLE_PROJECT_ID }}'
            workload_identity_provider: '${{ vars.GOOGLE_WORKLOAD_IDENTITY_FEDERATION_PROVIDER }}'
            service_account: '${{ vars.GOOGLE_WORKLOAD_IDENTITY_FEDERATION_SERVICE_ACCOUNT }}'

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-southwest1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Build and Push Container
        run: |-
            docker build -t "${{ env.GOOGLE_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GOOGLE_PROJECT_ID }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.GOOGLE_CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}" ./
            docker push "${{ env.GOOGLE_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GOOGLE_PROJECT_ID }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.GOOGLE_CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.GOOGLE_CLOUD_RUN_SERVICE_NAME }}
          region: ${{ env.GOOGLE_CLOUD_RUN_REGION }}
          image: ${{ env.GOOGLE_ARTIFACT_REGISTRY_LOCATION }}-docker.pkg.dev/${{ env.GOOGLE_PROJECT_ID }}/${{ env.GOOGLE_ARTIFACT_REGISTRY_REPOSITORY }}/${{ env.GOOGLE_CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}
          env_vars: |-
            DB_CONNECTION=pgsql
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_DATABASE=${{ secrets.DB_DATABASE }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            LOG_STACK=${{ vars.LOG_STACK }}
            APP_ENV=${{ vars.APP_ENV }}
            APP_DEBUG=${{ vars.APP_DEBUG }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
